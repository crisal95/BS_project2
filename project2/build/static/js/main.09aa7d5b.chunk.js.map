{"version":3,"sources":["logo.svg","serviceWorker.js","hooks/apiHooks.js","hooks/buttonsFunctions.js","components/categoryCard/categoryCard.js","components/header/header.js","pages/home/home.js","components/question/question.js","components/timer/timer.js","components/prizesCard/prizesCard.js","pages/trivia/trivia.js","components/resultsCard/resultsCard.js","hooks/prizes.js","hooks/getMessageData.js","pages/result/result.js","pages/win/win.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","getToken","Cookies","get","fetch","then","resp","json","res","set","token","expires","catch","ex","console","error","GetByCategory","id","href","split","reverse","useState","questions","setQuestions","useEffect","localStorage","getItem","JSON","parse","BASE_URL","results","setItem","stringify","GetCategories","categories","setCategories","trivia_categories","deleteLocalStorage","removeItem","GetIndexCorrectAnswer","index","correct_answer","to","pathname","prizeIndex","parseInt","search","status","CategoryCard","categoryData","redirect","setRedirect","ButtonsFunctions","className","onClick","name","Header","Home","ApiHooks","map","item","key","Trivia","question","answers","setAnswers","selected","setSelected","ans","questionIndex","functionSort","a","b","Math","random","processData","incorrect_answers","push","sort","onChange","e","target","value","iter","type","Timer","timer","setTimer","setTimeout","PrizesCard","actualIndex","Prizes","list","setList","getQuestions","resultData","buttonClicked","setButton","button1","button2","click","button","title","subtitle","correctAns","text","getMessageData","prize","data","subTitle","Result","GetMessageData","Win","ReactDOM","render","StrictMode","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.09aa7d5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Cookies from \"js-cookie\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst BASE_URL = \"https://opentdb.com/api.php?amount=10&type=multiple\";\r\n\r\nfunction getToken() {\r\n  //const [token, setToken] = useState(\"\");\r\n  if (!Cookies.get(\"token\")) {\r\n    fetch(`https://opentdb.com/api_token.php?command=request`)\r\n      .then((resp) => resp.json())\r\n      .then((res) => {\r\n        Cookies.set(\"token\", res.token, {\r\n          expires: 0.5,\r\n        });\r\n      })\r\n      .catch((ex) => {\r\n        console.error(ex);\r\n      });\r\n  }\r\n}\r\n\r\nconst GetByCategory = () => {\r\n  let id = window.location.href.split(\"id=\").reverse()[0];\r\n  const [questions, setQuestions] = useState(null);\r\n  let bool = false;\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"index\")) {\r\n      fetch(BASE_URL + `&category=` + id)\r\n        .then((resp) => resp.json())\r\n        .then((res) => {\r\n          setQuestions(res.results);\r\n          localStorage.setItem(\"questions\", JSON.stringify(res.results));\r\n          localStorage.setItem(\"index\", 0);\r\n        })\r\n        .catch((ex) => {\r\n          console.error(ex);\r\n        });\r\n    } else {\r\n      setQuestions(JSON.parse(localStorage.getItem(\"questions\")));\r\n    }\r\n  }, []);\r\n\r\n  return questions;\r\n};\r\n\r\nconst GetCategories = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  useEffect(() => {\r\n    fetch(`https://opentdb.com/api_category.php`)\r\n      .then((resp) => resp.json())\r\n      .then((res) => {\r\n        setCategories(res.trivia_categories);\r\n      })\r\n      .catch((ex) => {\r\n        console.error(ex);\r\n      });\r\n  }, []);\r\n  return categories;\r\n};\r\n\r\nconst deleteLocalStorage = () => {\r\n  localStorage.removeItem(\"index\");\r\n  localStorage.removeItem(\"questions\");\r\n};\r\n\r\nconst GetIndexCorrectAnswer = (index) => {\r\n  const question = JSON.parse(localStorage.getItem(\"questions\"));\r\n  return question[index].correct_answer;\r\n}\r\n\r\nexport default {\r\n  getToken,\r\n  GetByCategory,\r\n  GetCategories,\r\n  deleteLocalStorage,\r\n  GetIndexCorrectAnswer,\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst redirectHome = () => {\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"/\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst redirectTrivia = (id) => {\r\n  if (localStorage.getItem(\"index\")) {\r\n    if (localStorage.getItem(\"boolIndex\") === \"false\") {\r\n      localStorage.setItem(\"boolIndex\", \"true\");\r\n      let prizeIndex = parseInt(localStorage.getItem(\"index\"));\r\n      localStorage.setItem(\"index\", prizeIndex + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"/trivia\",\r\n        search: \"?id=\" + id,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst redirectResults = (status) => {\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"/result\",\r\n        search: \"?answer=\" + status,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst redirectWin = () => {\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"win\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default {\r\n  redirectHome,\r\n  redirectTrivia,\r\n  redirectResults,\r\n  redirectWin,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './categoryCard.css';\r\nimport ButtonsFunctions from \"../../hooks/buttonsFunctions\";\r\n\r\nconst CategoryCard = ({ categoryData }) => {\r\n const [redirect, setRedirect] = useState(false);\r\n\r\nconst click = () => {\r\n  setRedirect(true);\r\n  localStorage.setItem(\"id\",categoryData.id);\r\n};\r\n\r\n\r\nif (redirect) {\r\n  return ButtonsFunctions.redirectTrivia(categoryData.id);\r\n}\r\n\r\n  return (\r\n    <div className=\"categoryCard\" onClick={() => {\r\n      click();\r\n    }}>\r\n      <h2>{categoryData.name}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryCard;\r\n","import React from 'react';\r\nimport \"./header.css\";\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n<div className=\"header\">\r\n    <div className=\"title\">\r\n        <h1>Do you want to play a game?</h1>\r\n    </div>\r\n    <div className=\"heroContent\">\r\n<p>This a game similar to Who wants to be millionaire! Choose a category and let's start!</p>\r\n<button>Game rules</button>\r\n    </div>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState, useEffect } from \"react\";\r\nimport ApiHooks from \"../../hooks/apiHooks\";\r\nimport CategorieCard from \"../../components/categoryCard/categoryCard\";\r\nimport \"./home.css\";\r\nimport Header from \"../../components/header/header\";\r\n\r\nconst Home = () => {\r\n  const categories = ApiHooks.GetCategories();\r\n  ApiHooks.deleteLocalStorage();\r\n  localStorage.setItem(\"boolIndex\", \"false\");\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"home\">\r\n        {categories.map((item) => (\r\n          <div key={item.id} className=\"categorieItem\">\r\n            <CategorieCard categoryData={item} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./question.css\";\r\nimport ButtonsFunctions from \"../../hooks/buttonsFunctions\";\r\n\r\nconst Trivia = ({ question }) => {\r\n  const [answers, setAnswers] = useState([]);\r\n  const [selected, setSelected] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n  let ans = [];\r\n  let questionIndex = parseInt(localStorage.getItem(\"index\"));\r\n\r\n  useEffect(() => {\r\n    if (question) {\r\n      setAnswers(processData());\r\n    }\r\n  }, []);\r\n\r\n  function functionSort(a, b) {\r\n    return 0.5 - Math.random();\r\n  }\r\n  const processData = () => {\r\n    ans = [...question.incorrect_answers];\r\n    ans.push(question.correct_answer);\r\n    ans = ans.sort(functionSort);\r\n    return ans;\r\n  };\r\n\r\n  const handleButtonChange = (e) => {\r\n    setSelected(e.target.value);\r\n  };\r\n  const buttonClick = () => {\r\n    setRedirect(true);\r\n  };\r\n  const redirectTo = () => {\r\n      \r\n    if (selected === question.correct_answer) {\r\n      if(questionIndex === 9){\r\n        return ButtonsFunctions.redirectWin();\r\n      }\r\n      return ButtonsFunctions.redirectResults(\"correct\");\r\n    } else {\r\n      return ButtonsFunctions.redirectResults(\"incorrect\");\r\n    }\r\n  };\r\n\r\n  if (redirect) {\r\n    return redirectTo();\r\n  }\r\n\r\n  return (\r\n    answers && (\r\n      <div className=\"questionContainer\">\r\n        <h3>{question.question}</h3>\r\n        <div className=\"radioButtons\" onChange={handleButtonChange}>\r\n          {answers.map((item, iter) => (\r\n            <div key={iter} className=\"radioButton\">\r\n              <input type=\"radio\" value={item} name=\"option\" /> {item}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            buttonClick();\r\n          }}\r\n        >\r\n          Final answer\r\n        </button>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Trivia;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ButtonsFunctions from \"../../hooks/buttonsFunctions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Timer = () => {\r\n  const [timer, setTimer] = useState(300);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (timer !== 0) {\r\n      const timerTimeOut = setTimeout(() => {\r\n        if (timer !== 0) {\r\n          setTimer(timer - 1);\r\n        }\r\n      }, 1000);\r\n    } else {\r\n      setRedirect(true);\r\n    }\r\n  });\r\n\r\n  if (redirect) {\r\n    return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/result\",\r\n            search: \"?answer=\" + \"\",\r\n          }}\r\n        />\r\n      );\r\n  }\r\n  return (\r\n    <div className=\"timerContainer\">\r\n      <h3>Your time: {timer} seconds</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport \"./prizesCard.css\";\r\nimport Prizes from \"../../data/prizes.json\";\r\n\r\nconst PrizesCard = () => {\r\n    const actualIndex = localStorage.getItem(\"index\");\r\n  return <div className=\"prizeCard\">\r\n      <div className=\"title\"><h3>Yor current reward</h3></div>\r\n      <div className={actualIndex===\"0\" ? 'actualPrizeText' : 'prizeText'}>\r\n      <p className=\"prizeText\">0</p>\r\n      </div>\r\n      {Prizes.map((item,iter) => (\r\n          <div key={iter} className={actualIndex===(iter+1) ? 'actualPrizeText' : 'prizeText'}>\r\n            <p className>{item}</p>\r\n          </div>\r\n        ))}\r\n  </div>;\r\n};\r\n\r\nexport default PrizesCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ApiHooks from \"../../hooks/apiHooks\";\r\nimport \"./trivia.css\";\r\nimport Question from \"../../components/question/question\";\r\nimport Timer from \"../../components/timer/timer\";\r\nimport PrizesCard from \"../../components/prizesCard/prizesCard\";\r\n\r\nconst Trivia = () => {\r\n  let id = window.location.href.split(\"id=\").reverse()[0];\r\n  const [list, setList] = useState(null);\r\n\r\n  const getQuestions = ApiHooks.GetByCategory(id);\r\n  localStorage.setItem(\"boolIndex\", \"false\");\r\n\r\n  useEffect(() => {\r\n    if (getQuestions) {\r\n      setList(getQuestions);\r\n    }\r\n  }, [getQuestions]);\r\n\r\n  return (\r\n    list && (\r\n      <div className=\"triviaContainer\">\r\n        <div className=\"questionCard\">\r\n          <Question question={list[localStorage.getItem(\"index\")]} />\r\n        </div>\r\n        <div className=\"extraItems\">\r\n          <Timer />\r\n          <PrizesCard />\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Trivia;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ApiHooks from \"../../hooks/apiHooks\";\r\nimport \"./resultsCard.css\";\r\nimport ButtonsFunctions from \"../../hooks/buttonsFunctions\";\r\n\r\nconst Trivia = ({ resultData }) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [buttonClicked, setButton] = useState(\"\");\r\n\r\n  //let buttonClicked = \"\";\r\n  let button1 = \"Try again!\";\r\n  let button2 = \"Home\";\r\n  const id = localStorage.getItem(\"id\");\r\n\r\n  const buttonText = () => {\r\n    if (resultData.status === \"correct\") {\r\n      button1 = \"Next question!\";\r\n      button2 = \"Give up!\";\r\n    }\r\n  };\r\n\r\n  const click = (button) => {\r\n    setButton(button);\r\n    setRedirect(true);\r\n  };\r\n\r\n  if (redirect) {\r\n    if (buttonClicked === \"1\") {\r\n      if (resultData.status === \"correct\") {\r\n  \r\n        return ButtonsFunctions.redirectTrivia(id);\r\n      }\r\n      ApiHooks.deleteLocalStorage();\r\n      return ButtonsFunctions.redirectTrivia(id);\r\n    } else {\r\n      if (resultData.status === \"correct\") {\r\n        return ButtonsFunctions.redirectResults(\"retired\");\r\n      }\r\n      ApiHooks.deleteLocalStorage();\r\n      return ButtonsFunctions.redirectHome();\r\n    }\r\n  }\r\n\r\n  buttonText();\r\n  return (\r\n    <div className=\"resultCard\">\r\n      <div className=\"title\">\r\n        <h3>{resultData.title}</h3>\r\n      </div>\r\n      <div className=\"textCard\">\r\n        <div className=\"textCard_title\">\r\n          <h3>{resultData.subtitle}</h3>\r\n        </div>\r\n        <div className=\"textCard_text\">\r\n          <p>{resultData.correctAns}</p>\r\n          <p>{resultData.text}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"cardButtons\"></div>\r\n      <button\r\n        onClick={() => {\r\n          click(\"1\");\r\n        }}\r\n      >\r\n        {button1}\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          click(\"2\");\r\n        }}\r\n      >\r\n        {button2}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trivia;\r\n","import React from \"react\";\r\nimport Prizes from \"../data/prizes.json\";\r\n\r\nconst getNextPrize = (currentPrize) => {\r\n  const index = Prizes.indexOf(currentPrize);\r\n  if (index !== Prizes.length - 1) {\r\n    return Prizes[index];\r\n  }\r\n};\r\n\r\nconst getCurrentPrize = (index) => {\r\n    return Prizes[index];\r\n}\r\n\r\nexport default {\r\n  getNextPrize,\r\n  getCurrentPrize,\r\n};\r\n","import React from \"react\";\r\nimport Prizes from \"../hooks/prizes\";\r\nimport ApiHooks from \"../hooks/apiHooks\";\r\n\r\nconst getMessageData = () => {\r\n  let status = window.location.href.split(\"answer=\").reverse()[0];\r\n  let prizeIndex = parseInt(localStorage.getItem(\"index\"));\r\n  let prize = Prizes.getCurrentPrize(prizeIndex);\r\n  const correctAnswer = ApiHooks.GetIndexCorrectAnswer(prizeIndex);\r\n  let data = {\r\n    title: \"\",\r\n    subTitle: \"\",\r\n    correctAns:\"Correct answer was: \" + correctAnswer,\r\n    text: \"\",\r\n    status: status,\r\n  };\r\n  if (status === \"correct\") {\r\n    data.title = \"You have answered correctly!\";\r\n    data.subtitle = \"Current reward\";\r\n    data.text =\r\n      \"Your current reward is \" +\r\n      prize +\r\n      \" dollars. Do you want to give up or keep playing?\";\r\n  } else if (status === \"incorrect\") {\r\n    data.title = \"You have answered incorrectly!\";\r\n    data.subtitle = \"You lost\";\r\n    data.text = \"You have lost all your rewards. Try again!\";\r\n  } else if (status === \"retired\") {\r\n    data.title = \"You have retired!\";\r\n    data.subtitle = \"You lost. But you can keep your current rewards!\";\r\n    data.text = \"You won \" + prize + \" dollars! Try again!\";\r\n    if (prizeIndex === \"0\") {\r\n      data.subtitle = \"You lost. And you didn´t win any money!\";\r\n      data.text = \"Try again!\";\r\n    }\r\n  } else {\r\n    data.title = \"The time is up!\";\r\n    data.subtitle = \"You lost all your rewards!\";\r\n    data.text = \"Try again!\";\r\n    if (prizeIndex === \"0\") {\r\n      data.subtitle =\r\n        \"You lost. And you didn´t lose any awards because you did not have any!\";\r\n    }\r\n  }\r\n  return data;\r\n};\r\nexport default getMessageData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./result.css\";\r\nimport ResultsCard from \"../../components/resultsCard/resultsCard\";\r\nimport GetMessageData from \"../../hooks/getMessageData\";\r\n\r\nconst Result = () => {\r\n\r\n  return (\r\n    <div className=\"results\">\r\n      <ResultsCard resultData={GetMessageData()}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { useState } from \"react\";\r\nimport './win.css';\r\nimport Prizes from \"../../hooks/prizes\"\r\nimport ApiHooks from \"../../hooks/apiHooks\";\r\nimport ButtonsFunctions from \"../../hooks/buttonsFunctions\";\r\n\r\nconst Win = () => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  let prizeIndex = parseInt(localStorage.getItem(\"index\"));\r\n  let prize = Prizes.getCurrentPrize(prizeIndex);\r\n\r\n  const click = () => {\r\n    setRedirect(true);\r\n  };\r\n\r\n  if (redirect) {\r\n    ApiHooks.deleteLocalStorage();\r\n    return ButtonsFunctions.redirectHome();\r\n  }\r\n  return (\r\n    <div className=\"winCard\">\r\n      <h3 className=\"wonTitle\">You won!!!!!!</h3>\r\n      <p>\r\n        You have won {prize} dollars!!! You wanted to be millionaire, you are\r\n        richer than the guy from monopoly\r\n      </p>\r\n      <button\r\n        onClick={() => {\r\n          click();\r\n        }}\r\n      >Back to home</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Win;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"../src/pages/app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"../src/pages/home/home\";\nimport ApiHooks from \"../src/hooks/apiHooks\";\nimport Trivia from \"../src/pages/trivia/trivia\";\nimport Result from \"../src/pages/result/result\";\nimport Win from \"../src/pages/win/win\";\nimport Header from \"../src/components/header/header\";\n\nApiHooks.getToken();\nReactDOM.render(\n  <Router>\n\n      <React.StrictMode>\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/trivia\">\n        <Trivia />\n      </Route>\n      <Route path=\"/result\">\n        <Result />\n      </Route>\n      <Route path=\"/win\">\n        <Win />\n      </Route>\n    </Switch>\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}